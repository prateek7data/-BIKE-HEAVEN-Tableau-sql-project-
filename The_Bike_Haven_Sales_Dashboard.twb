<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='customerandgeo+' inline='true' name='federated.0bkvou90eljt7i1g6r9kt1dexfxj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='customerandgeo' name='textscan.0gjokoi11azijt1b4dxw50pbs5lt'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/INTERNSHALA DATA SCINCE/Tableau/main project/final merged' filename='customerandgeo.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0gjokoi11azijt1b4dxw50pbs5lt' name='budget.csv' table='[budget#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='Budget' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0gjokoi11azijt1b4dxw50pbs5lt' name='customerandgeo.csv' table='[customerandgeo#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='customerkey' ordinal='0' />
              <column datatype='integer' name='geographykey' ordinal='1' />
              <column datatype='string' name='customeralternatekey' ordinal='2' />
              <column datatype='string' name='firstname' ordinal='3' />
              <column datatype='string' name='lastname' ordinal='4' />
              <column datatype='date' name='birthdate' ordinal='5' />
              <column datatype='string' name='gender' ordinal='6' />
              <column datatype='string' name='englishoccupation' ordinal='7' />
              <column datatype='integer' name='numbercarsowned' ordinal='8' />
              <column datatype='date' name='datefirstpurchase' ordinal='9' />
              <column datatype='string' name='commutedistance' ordinal='10' />
              <column datatype='string' name='city' ordinal='11' />
              <column datatype='string' name='province' ordinal='12' />
              <column datatype='string' name='country' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.0gjokoi11azijt1b4dxw50pbs5lt' name='prosalesmerged.csv' table='[prosalesmerged#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='productkey' ordinal='0' />
              <column datatype='integer' name='customerkey' ordinal='1' />
              <column datatype='string' name='salesordernumber' ordinal='2' />
              <column datatype='real' name='salesamount' ordinal='3' />
              <column datatype='date' name='formatted_order_date' ordinal='4' />
              <column datatype='date' name='formatted_ship_date' ordinal='5' />
              <column datatype='integer' name='year' ordinal='6' />
              <column datatype='integer' name='fiscalyear' ordinal='7' />
              <column datatype='integer' name='fiscalquarter' ordinal='8' />
              <column datatype='string' name='product_category' ordinal='9' />
              <column datatype='string' name='subcategory' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.0gjokoi11azijt1b4dxw50pbs5lt' name='budget.csv' table='[budget#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='year' ordinal='1' />
              <column datatype='integer' name='Budget' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Budget]' value='[budget.csv].[Budget]' />
          <map key='[Date]' value='[budget.csv].[Date]' />
          <map key='[birthdate]' value='[customerandgeo.csv].[birthdate]' />
          <map key='[city]' value='[customerandgeo.csv].[city]' />
          <map key='[commutedistance]' value='[customerandgeo.csv].[commutedistance]' />
          <map key='[country]' value='[customerandgeo.csv].[country]' />
          <map key='[customeralternatekey]' value='[customerandgeo.csv].[customeralternatekey]' />
          <map key='[customerkey (prosalesmerged.csv)]' value='[prosalesmerged.csv].[customerkey]' />
          <map key='[customerkey]' value='[customerandgeo.csv].[customerkey]' />
          <map key='[datefirstpurchase]' value='[customerandgeo.csv].[datefirstpurchase]' />
          <map key='[englishoccupation]' value='[customerandgeo.csv].[englishoccupation]' />
          <map key='[firstname]' value='[customerandgeo.csv].[firstname]' />
          <map key='[fiscalquarter]' value='[prosalesmerged.csv].[fiscalquarter]' />
          <map key='[fiscalyear]' value='[prosalesmerged.csv].[fiscalyear]' />
          <map key='[formatted_order_date]' value='[prosalesmerged.csv].[formatted_order_date]' />
          <map key='[formatted_ship_date]' value='[prosalesmerged.csv].[formatted_ship_date]' />
          <map key='[gender]' value='[customerandgeo.csv].[gender]' />
          <map key='[geographykey]' value='[customerandgeo.csv].[geographykey]' />
          <map key='[lastname]' value='[customerandgeo.csv].[lastname]' />
          <map key='[numbercarsowned]' value='[customerandgeo.csv].[numbercarsowned]' />
          <map key='[product_category]' value='[prosalesmerged.csv].[product_category]' />
          <map key='[productkey]' value='[prosalesmerged.csv].[productkey]' />
          <map key='[province]' value='[customerandgeo.csv].[province]' />
          <map key='[salesamount]' value='[prosalesmerged.csv].[salesamount]' />
          <map key='[salesordernumber]' value='[prosalesmerged.csv].[salesordernumber]' />
          <map key='[subcategory]' value='[prosalesmerged.csv].[subcategory]' />
          <map key='[year (budget.csv)]' value='[budget.csv].[year]' />
          <map key='[year]' value='[prosalesmerged.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customerkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customerkey]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>customerkey</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geographykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geographykey]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>geographykey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customeralternatekey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customeralternatekey]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>customeralternatekey</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>firstname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[firstname]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>firstname</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lastname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lastname]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>lastname</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birthdate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[birthdate]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>birthdate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>englishoccupation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[englishoccupation]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>englishoccupation</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>numbercarsowned</remote-name>
            <remote-type>20</remote-type>
            <local-name>[numbercarsowned]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>numbercarsowned</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datefirstpurchase</remote-name>
            <remote-type>133</remote-type>
            <local-name>[datefirstpurchase]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>datefirstpurchase</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commutedistance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[commutedistance]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>commutedistance</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[customerandgeo.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productkey]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>productkey</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customerkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customerkey (prosalesmerged.csv)]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>customerkey</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salesordernumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[salesordernumber]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>salesordernumber</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salesamount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[salesamount]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>salesamount</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>formatted_order_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[formatted_order_date]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>formatted_order_date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>formatted_ship_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[formatted_ship_date]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>formatted_ship_date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fiscalyear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fiscalyear]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>fiscalyear</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fiscalquarter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fiscalquarter]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>fiscalquarter</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_category]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>product_category</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subcategory]</local-name>
            <parent-name>[prosalesmerged.csv]</parent-name>
            <remote-alias>subcategory</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[budget.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[budget.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>25</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (budget.csv)]</local-name>
            <parent-name>[budget.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget]</local-name>
            <parent-name>[budget.csv]</parent-name>
            <remote-alias>Budget</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='topten' datatype='boolean' name='[Calculation_727894316658057216]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([salesamount] ), &apos;desc&apos;) &lt;= 10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='monthbudget' datatype='integer' name='[Calculation_727894316685828098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MONTH([Date])' />
      </column>
      <column caption='salesmonth' datatype='integer' name='[Calculation_727894316686172163]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MONTH([formatted_order_date])' />
      </column>
      <column caption='DAYS taken to ship ' datatype='integer' name='[Calculation_727894316687065092]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, [formatted_order_date], [formatted_ship_date])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='budget.csv' datatype='table' name='[__tableau_internal_object_id__].[budget.csv_1C2370451E0D499EAF0C10ED0A1E0334]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='customerandgeo.csv' datatype='table' name='[__tableau_internal_object_id__].[customerandgeo.csv_193040ABB8D04A00803CD14E9D635651]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='prosalesmerged.csv' datatype='table' name='[__tableau_internal_object_id__].[prosalesmerged.csv_78A8EE715F9B4C58AE26DEA13A8ECEC5]' role='measure' type='quantitative' />
      <column caption='Birthdate' datatype='date' name='[birthdate]' role='dimension' type='ordinal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Commutedistance' datatype='string' name='[commutedistance]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customeralternatekey' datatype='string' name='[customeralternatekey]' role='dimension' type='nominal' />
      <column caption='Customerkey (Prosalesmerged.Csv)' datatype='integer' name='[customerkey (prosalesmerged.csv)]' role='measure' type='quantitative' />
      <column caption='Customerkey' datatype='integer' name='[customerkey]' role='measure' type='quantitative' />
      <column caption='Datefirstpurchase' datatype='date' name='[datefirstpurchase]' role='dimension' type='ordinal' />
      <column caption='Englishoccupation' datatype='string' name='[englishoccupation]' role='dimension' type='nominal' />
      <column caption='Englishproductcategoryname' datatype='string' name='[englishproductcategoryname]' role='dimension' type='nominal' />
      <column caption='Firstname' datatype='string' name='[firstname]' role='dimension' type='nominal' />
      <column caption='Fiscalquarter' datatype='integer' name='[fiscalquarter]' role='measure' type='quantitative' />
      <column caption='Fiscalyear' datatype='integer' name='[fiscalyear]' role='measure' type='quantitative' />
      <column caption='Formatted Order Date' datatype='date' name='[formatted_order_date]' role='dimension' type='ordinal' />
      <column caption='Formatted Ship Date' datatype='date' name='[formatted_ship_date]' role='dimension' type='ordinal' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Geographykey' datatype='integer' name='[geographykey]' role='measure' type='quantitative' />
      <column caption='Lastname' datatype='string' name='[lastname]' role='dimension' type='nominal' />
      <column caption='Numbercarsowned' datatype='integer' name='[numbercarsowned]' role='measure' type='quantitative' />
      <column caption='Product Category' datatype='string' name='[product_category]' role='dimension' type='nominal' />
      <column caption='Productkey' datatype='integer' name='[productkey]' role='measure' type='quantitative' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
      <column caption='Salesordernumber' datatype='string' name='[salesordernumber]' role='dimension' type='nominal' />
      <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal' />
      <column caption='Year (Budget.Csv)' datatype='integer' name='[year (budget.csv)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[firstname]' derivation='None' name='[none:firstname:nk]' pivot='key' type='nominal' />
      <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, province, city'>
          <field>[country]</field>
          <field>[province]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:subcategory:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Road Bikes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Helmets&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tires and Tubes&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Fenders&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shorts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hydration Packs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Touring Bikes&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jerseys&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mountain Bikes&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Bottles and Cages&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:firstname:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexandre&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Angel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arthur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brandy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Christine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crystal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Deborah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacqueline&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeffery&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Julia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kayla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kristine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Levi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Makayla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marty&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meredith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nancy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Punya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ricardo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shawn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Veronica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zachary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alisha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CÃ©sar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dianne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emily&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frank&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isabel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jared&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JosÃ©&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenneth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latoya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mackenzie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mariah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meagan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Misty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Raul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rohinton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stacey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tasha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trisha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amber&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ariana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bharat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bridget&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chloe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cory&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Deanna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Devin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabriella&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gretchen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kathleen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kristen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melinda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nuan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Phillip&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rosa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stephanie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Terrence&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tyrone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Y.&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Claudia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Dana&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Jaclyn&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Kaitlyn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Abhijit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Audrey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bryce&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cedric&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clarence&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daisy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Donna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Erin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Evan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gerald&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Heidi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jeremy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Johnny&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kellie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kurt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lisa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manuel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Masato&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nathan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pamela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rakesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rob&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sydney&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andrea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arturo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bob&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bruce&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carolyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christopher&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curtis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denise&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dustin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gavin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harold&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jacquelyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jenna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Joel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Julian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kaylee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kristopher&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Linda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mallory&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marvin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Naomi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rachael&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Richard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ruth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shawna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tiffany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Victor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zoe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alexa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arianna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bianca&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Britta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carmen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cheryl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Courtney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dawn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Javier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joanna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kathryn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kristi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madalena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Melissa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Olivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pieter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reginald&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steve&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vadim&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yiroyuki&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Abigail&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Jaime&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Kelli&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Maurice&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Michele&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aimee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ann&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BegoÃ±a&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brendan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Candace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Danielle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elijah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Francis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Janet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jonathon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jorge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kendra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lauren&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lorrin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MarÃ­a&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Max&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Miranda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicolas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pedro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Randy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rodrigo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trevor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whitney&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albert&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alvin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anthony&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bernard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darren&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Emma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isabelle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jarred&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jillian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joseph&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kimberly&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Megan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NiÃ±ia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Petr&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raymond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rolando&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stacy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tommy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tristan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adrienne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alexandra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Angelica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Calvin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Catherine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Derrick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eduardo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ernest&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fernando&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Giorgio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ioannis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jesse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ken&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lacey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Larry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lolan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marcus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Melody&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mike&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Noah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paula&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RamÃ³n&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Robyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Simon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tamer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tonya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wendy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arif&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Billy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Donald&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erik&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gail&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jake&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jocelyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Judith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kristin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leonard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madeline&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muniraju&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Omar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sharon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Valerie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yolanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Byron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cassandra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Connie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dalton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DesirÃ©e&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eddie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evelyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gerrit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jermaine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Justine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelly&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nathaniel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Patricia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Priscilla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ralph&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ruben&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sabrina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samantha&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shirleen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sylvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Theodore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Walter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wyatt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Xavier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adrian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alicia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brenda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caitlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cassidy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Connor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Desiree&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faith&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Holly&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;James&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jonathan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;K.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelsey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laura&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lloyd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mathew&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Neil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ram&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roberto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samuel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tabitha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aidan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alison&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anibal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Daniel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Devon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Florian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giraldo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Irma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Janelle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jessica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordyn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lanna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lori&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maurizio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mindy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nichole&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pearlie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rodney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sophia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tammy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tracy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wesley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ajay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Allison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Candice&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Danny&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elizabeth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Francisco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gloria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isaac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Janice&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JÃ©sus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jose&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latasha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lydia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mircea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicole&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peggy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Raquel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scot&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sriniwa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;William&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aaron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alejandro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Angela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ashlee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bobby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brandi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carrie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cynthia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dennis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwayne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edwin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geoffrey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Heather&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jennifer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jenny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Julie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kristy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lindsay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mandar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Osarumwense&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pablo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ricky&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sheena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Susan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timothy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Colleen&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Ebony&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jessie&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Kelvin&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Natalie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alfredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anders&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armando&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Birgit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brittney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Ann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cristina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Deb&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erika&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hannah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jacob&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeff&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jodi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Juha-Pekka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katrina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kristina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melvin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rachel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RenÃ©e&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shaun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stuart&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Theresa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanessa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yvonne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adriana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alberto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alyssa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andres&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blake&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Briana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Darryl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Emmanuel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isaiah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jarrod&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joshua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katelyn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kirk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mario&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meghan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mohamed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oscar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rebecca&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ronald&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Teresa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alexia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AlÃ­cia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brandon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caleb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cassie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clifford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Damien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Destiny&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Felicia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hunter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jerry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaitlin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lance&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matthew&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mikael&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ramon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Robin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sandra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tamara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tony&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Abby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AndrÃ©s&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bonnie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bryant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cindy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Daisuke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Derek&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dylan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hector&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeremiah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnathan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Julio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Krystal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lindsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mandy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Masaki&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micheal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Natasha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paige&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rafael&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sheila&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suzanne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vincent&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Dominique&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Gabrielle&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Kari&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Louis&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Margaret&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Robert&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Seth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;April&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bethany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brianna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carlos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Don&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabriel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ivan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jasmine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jimmy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Josue&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Krista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marissa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Melanie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Molly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norimichi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philip&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rebekah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ronnie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sergio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stefanie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Terrance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='budget.csv' id='budget.csv_1C2370451E0D499EAF0C10ED0A1E0334'>
            <properties context=''>
              <relation connection='textscan.0gjokoi11azijt1b4dxw50pbs5lt' name='budget.csv' table='[budget#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='integer' name='Budget' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='customerandgeo.csv' id='customerandgeo.csv_193040ABB8D04A00803CD14E9D635651'>
            <properties context=''>
              <relation connection='textscan.0gjokoi11azijt1b4dxw50pbs5lt' name='customerandgeo.csv' table='[customerandgeo#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='customerkey' ordinal='0' />
                  <column datatype='integer' name='geographykey' ordinal='1' />
                  <column datatype='string' name='customeralternatekey' ordinal='2' />
                  <column datatype='string' name='firstname' ordinal='3' />
                  <column datatype='string' name='lastname' ordinal='4' />
                  <column datatype='date' name='birthdate' ordinal='5' />
                  <column datatype='string' name='gender' ordinal='6' />
                  <column datatype='string' name='englishoccupation' ordinal='7' />
                  <column datatype='integer' name='numbercarsowned' ordinal='8' />
                  <column datatype='date' name='datefirstpurchase' ordinal='9' />
                  <column datatype='string' name='commutedistance' ordinal='10' />
                  <column datatype='string' name='city' ordinal='11' />
                  <column datatype='string' name='province' ordinal='12' />
                  <column datatype='string' name='country' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='prosalesmerged.csv' id='prosalesmerged.csv_78A8EE715F9B4C58AE26DEA13A8ECEC5'>
            <properties context=''>
              <relation connection='textscan.0gjokoi11azijt1b4dxw50pbs5lt' name='prosalesmerged.csv' table='[prosalesmerged#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='productkey' ordinal='0' />
                  <column datatype='integer' name='customerkey' ordinal='1' />
                  <column datatype='string' name='salesordernumber' ordinal='2' />
                  <column datatype='real' name='salesamount' ordinal='3' />
                  <column datatype='date' name='formatted_order_date' ordinal='4' />
                  <column datatype='date' name='formatted_ship_date' ordinal='5' />
                  <column datatype='integer' name='year' ordinal='6' />
                  <column datatype='integer' name='fiscalyear' ordinal='7' />
                  <column datatype='integer' name='fiscalquarter' ordinal='8' />
                  <column datatype='string' name='product_category' ordinal='9' />
                  <column datatype='string' name='subcategory' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[year]' />
              <expression op='[year (budget.csv)]' />
            </expression>
            <first-end-point object-id='prosalesmerged.csv_78A8EE715F9B4C58AE26DEA13A8ECEC5' />
            <second-end-point object-id='budget.csv_1C2370451E0D499EAF0C10ED0A1E0334' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[customerkey]' />
              <expression op='[customerkey (prosalesmerged.csv)]' />
            </expression>
            <first-end-point object-id='customerandgeo.csv_193040ABB8D04A00803CD14E9D635651' />
            <second-end-point object-id='prosalesmerged.csv_78A8EE715F9B4C58AE26DEA13A8ECEC5' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_0F8040E557174AFB950AA89876BFEC15]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='sales figure by region and city ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='actual sales amount vs budget '>
      <table>
        <view>
          <datasources>
            <datasource caption='customerandgeo+' name='federated.0bkvou90eljt7i1g6r9kt1dexfxj' />
          </datasources>
          <datasource-dependencies datasource='federated.0bkvou90eljt7i1g6r9kt1dexfxj'>
            <column datatype='integer' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Budget]' derivation='Sum' forecast-column-base='[sum:Budget:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' forecast-column-base='[sum:salesamount:qk]' forecast-column-type='forecast-value' name='[fVal:sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_6CD0A2148A8D42238189166FCB063955]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[country]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]' included-values='in-range-or-null'>
            <min>2019</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]</column>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='376' />
                <format attr='maxwidth' value='376' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[fVal:sum:salesamount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='251' />
                <format attr='maxwidth' value='251' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[fVal:sum:Budget:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='251' />
                <format attr='maxwidth' value='251' />
                <format attr='minheight' value='406' />
                <format attr='maxheight' value='406' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bkvou90eljt7i1g6r9kt1dexfxj].[fVal:sum:salesamount:qk] + [federated.0bkvou90eljt7i1g6r9kt1dexfxj].[fVal:sum:Budget:qk])</rows>
        <cols>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{78BB0BFD-7690-4C65-BA3E-5B30E775625E}' />
    </worksheet>
    <worksheet name='product category sales '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f9a655'>SALES ACROSS CATEGORIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='customerandgeo+' name='federated.0bkvou90eljt7i1g6r9kt1dexfxj' />
          </datasources>
          <datasource-dependencies datasource='federated.0bkvou90eljt7i1g6r9kt1dexfxj'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[product_category]' derivation='None' name='[none:product_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column caption='Product Category' datatype='string' name='[product_category]' role='dimension' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_0F8040E557174AFB950AA89876BFEC15]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[country]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:subcategory:nk]' />
              <groupfilter function='member' level='[none:subcategory:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]</column>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:product_category:nk]' value='left' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]' value='#e9f3f2' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]' value='11' />
            <format attr='font-family' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]' value='Tableau Regular' />
            <format attr='color' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]' value='#ff5500' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' palette='tableau-map-temperatur' symmetric='false' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' />
              <text column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:product_category:nk] / [federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{2C348C59-6697-4BC8-A11C-767F7744C030}' />
    </worksheet>
    <worksheet name='sales figure by region and city '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#75a1c7'>ALL SALES REGION</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='customerandgeo+' name='federated.0bkvou90eljt7i1g6r9kt1dexfxj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0bkvou90eljt7i1g6r9kt1dexfxj'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]' value='48' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='373' />
                <format attr='maxwidth' value='373' />
                <format attr='minheight' value='288' />
                <format attr='maxheight' value='288' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</rows>
        <cols>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</cols>
      </table>
      <simple-id uuid='{91538904-8A34-4ABE-84AB-B86CCFFF8EFF}' />
    </worksheet>
    <worksheet name='top 10 customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='customerandgeo+' name='federated.0bkvou90eljt7i1g6r9kt1dexfxj' />
          </datasources>
          <datasource-dependencies datasource='federated.0bkvou90eljt7i1g6r9kt1dexfxj'>
            <column caption='topten' datatype='boolean' name='[Calculation_727894316658057216]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([salesamount] ), &apos;desc&apos;) &lt;= 10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Firstname' datatype='string' name='[firstname]' role='dimension' type='nominal' />
            <column-instance column='[firstname]' derivation='None' name='[none:firstname:nk]' pivot='key' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_727894316658057216]' derivation='User' name='[usr:Calculation_727894316658057216:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:firstname:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_0F8040E557174AFB950AA89876BFEC15]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[country]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:firstname:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Morgan&quot;</bucket>
              <bucket>&quot;Ian&quot;</bucket>
              <bucket>&quot;Jennifer&quot;</bucket>
              <bucket>&quot;Kaitlyn&quot;</bucket>
              <bucket>&quot;Chloe&quot;</bucket>
              <bucket>&quot;Isabella&quot;</bucket>
              <bucket>&quot;Eduardo&quot;</bucket>
              <bucket>&quot;Seth&quot;</bucket>
              <bucket>&quot;Abigail&quot;</bucket>
              <bucket>&quot;Dalton&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[usr:Calculation_727894316658057216:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_727894316658057216:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[usr:Calculation_727894316658057216:nk:1]</column>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' />
              <text column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:firstname:nk]' />
              <color column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:firstname:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D45E1452-3734-4E89-87EC-8E0BE118ECD2}' />
    </worksheet>
    <worksheet name='top ten product by sales amount '>
      <table>
        <view>
          <datasources>
            <datasource caption='customerandgeo+' name='federated.0bkvou90eljt7i1g6r9kt1dexfxj' />
          </datasources>
          <datasource-dependencies datasource='federated.0bkvou90eljt7i1g6r9kt1dexfxj'>
            <column caption='topten' datatype='boolean' name='[Calculation_727894316658057216]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([salesamount] ), &apos;desc&apos;) &lt;= 10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[subcategory]' derivation='None' name='[none:subcategory:nk]' pivot='key' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column caption='Subcategory' datatype='string' name='[subcategory]' role='dimension' type='nominal' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_727894316658057216]' derivation='User' name='[usr:Calculation_727894316658057216:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_6CD0A2148A8D42238189166FCB063955]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[country]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]' direction='DESC' using='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' />
          <filter class='categorical' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[usr:Calculation_727894316658057216:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_727894316658057216:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[usr:Calculation_727894316658057216:nk:3]</column>
            <column>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' palette='orange_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='480' />
                <format attr='maxwidth' value='480' />
                <format attr='minheight' value='200' />
                <format attr='maxheight' value='200' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]</rows>
        <cols>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</cols>
      </table>
      <simple-id uuid='{0CBB2788-556C-4058-B1F4-5D134469A4F1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='customerandgeo+' name='federated.0bkvou90eljt7i1g6r9kt1dexfxj' />
      </datasources>
      <datasource-dependencies datasource='federated.0bkvou90eljt7i1g6r9kt1dexfxj'>
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='94000' id='20' param='horz' type-v2='layout-flow' w='98400' x='800' y='5000'>
            <zone h='94000' id='5' param='horz' type-v2='layout-flow' w='74200' x='800' y='5000'>
              <zone h='94000' id='3' type-v2='layout-basic' w='74200' x='800' y='5000'>
                <zone h='94000' id='8' param='vert' type-v2='layout-flow' w='37100' x='800' y='5000'>
                  <zone h='42875' id='9' name='top ten product by sales amount ' w='37100' x='800' y='5000'>
                    <layout-cache fixed-size-h='335' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='401' h='51125' id='25' is-fixed='true' name='product category sales ' w='37100' x='800' y='47875'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='94000' id='10' param='vert' type-v2='layout-flow' w='37100' x='37900' y='5000'>
                  <zone h='51875' id='1' name='sales figure by region and city ' w='37100' x='37900' y='5000'>
                    <layout-cache fixed-size-h='407' has-max-size-w='true' maxwidth='453' minwidth='453' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='297' h='38125' id='24' is-fixed='true' name='top 10 customers' w='37100' x='37900' y='56875'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='242' h='94000' id='19' is-fixed='true' param='vert' type-v2='layout-flow' w='24200' x='75000' y='5000'>
              <zone h='8625' id='21' name='actual sales amount vs budget ' param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='24200' x='75000' y='5000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='85375' id='18' name='actual sales amount vs budget ' w='24200' x='75000' y='13625'>
                <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='939' maxwidth='441' minheight='939' minwidth='441' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4000' id='26' type-v2='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Bernard MT Condensed' fontsize='18'>The Bike Haven</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='58' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='57' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='4000' id='26' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Bernard MT Condensed' fontsize='18'>The Bike Haven</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42875' id='9' is-fixed='true' name='top ten product by sales amount ' w='37100' x='800' y='5000'>
                  <layout-cache fixed-size-h='335' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51875' id='1' is-fixed='true' name='sales figure by region and city ' w='37100' x='37900' y='5000'>
                  <layout-cache fixed-size-h='407' has-max-size-w='true' maxwidth='453' minwidth='453' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='21' name='actual sales amount vs budget ' param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='24200' x='75000' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='85375' id='18' is-fixed='true' name='actual sales amount vs budget ' w='24200' x='75000' y='13625'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='939' maxwidth='441' minheight='939' minwidth='441' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51125' id='25' is-fixed='true' name='product category sales ' w='37100' x='800' y='47875'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38125' id='24' is-fixed='true' name='top 10 customers' w='37100' x='37900' y='56875'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B91A180D-F1EF-4EE2-AF95-79005CD67A9B}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='1169' maxwidth='827' minheight='1169' minwidth='827' preset-index='15' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='1' param='vert' removable='false' type-v2='layout-flow' w='98066' x='967' y='684'>
            <zone h='2823' id='3' type-v2='title' w='98066' x='967' y='684' />
            <zone h='8640' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98066' x='967' y='3507' />
            <zone h='87169' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98066' x='967' y='12147'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='TOP TEN PRODUCTS' captured-sheet='top ten product by sales amount ' id='1' />
                  <story-point caption='TOP COSTUMERS' captured-sheet='top 10 customers' id='2' />
                  <story-point caption='SALES COMPARISON WITH BUDGET ' captured-sheet='actual sales amount vs budget ' id='3'>
                    <capturedDeltas>
                      <worksheet name='actual sales amount vs budget '>
                        <filter class='quantitative' column='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]' included-values='in-range'>
                          <min>2019</min>
                          <max>2023</max>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='SALES FIGURES BY REGION FILTERED ON CITY ' captured-sheet='sales figure by region and city ' id='4' />
                  <story-point caption='PRODUCT CATEGORY AND SALES' captured-sheet='product category sales ' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{5F1A10D9-342F-4703-93C7-A57BFE2D68C5}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='top ten product by sales amount '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:subcategory:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[usr:Calculation_727894316658057216:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9562628F-C17E-49E2-93A8-0C2EAC5E9947}' />
    </window>
    <window class='worksheet' name='top 10 customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='142'>
            <card param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]' type='filter' />
            <card pane-specification-id='0' param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:firstname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:englishproductname:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:firstname:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:name:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[usr:Calculation_727894316658057216:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE6A153C-F633-4B75-A948-4E2E82D7AC0E}' />
    </window>
    <window class='worksheet' name='actual sales amount vs budget '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year (salesanddate.csv1):qk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5132077D-2B51-47FA-827C-594A16B65C28}' />
    </window>
    <window class='worksheet' name='sales figure by region and city '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:city:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23F52B9C-FB66-44F7-A7A8-3CF4F58E4BBE}' />
    </window>
    <window class='worksheet' name='product category sales '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[Action (Country)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:englishproductcategoryname:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:englishproductname:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:product_category:nk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:year:qk]</field>
            <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3AD7E01-2B2A-445E-B338-0196ABBA7750}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{8F3C70E9-44E2-4FEB-83C1-22727DDC7B05}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='actual sales amount vs budget '>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[fVal:sum:Budget:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='product category sales ' />
        <viewpoint name='sales figure by region and city '>
          <zoom type='fit-width' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Canada&quot;</value>
                  <value>1977844.8899999443</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;France&quot;</value>
                  <value>2644017.7399999537</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Germany&quot;</value>
                  <value>2894312.3599999528</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>3391712.2399999429</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Australia&quot;</value>
                  <value>9061000.7200005837</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]</field>
                    <field>[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[sum:salesamount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States&quot;</value>
                  <value>9389789.9400007986</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.0bkvou90eljt7i1g6r9kt1dexfxj].[none:country:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='top 10 customers' />
        <viewpoint name='top ten product by sales amount ' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7C79E25D-9ABB-437E-9677-742C6BCE980A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      16Le6rK1ucFr588z9RJOtB/8aaZHdh9AUTWCIERNU6IooD8cYVljZrMAXdfRNA0lhSgMUFUV
      17Gxpx4o0O/3PzVWodLEsW06zRIzP2TmTrl29SpemNLtNKjVG7i2xcS28IMQs1SjaOioqoai
      KgRBiKYqt/ecrot754ij6hpEPkGU4lojLl+9TqIZNCsFQjQ6zRqe5zGdOqBoqCpEUYCiariu
      i2VZpKmCPewT3tkd6bpOHMfoZgktDe/ssULGE5vJxMKyJlQbHZTIJUoUNFVBVW+PfWv1OlMv
      ABKcqc30IUfGenuOUycX8cOAlNuH826nS6NaYWJZqDmTStkkTUJGY+uJfl+ONcJ2fSzLIvZn
      dObmCWcOm1u7hHHMzB4SJDmcYR9/D1OGQqGAa1uUmm0qhRyzIMB1HbpzC9TrFRQS+sPRQ5+v
      aRpJEjOb+SRqjnLBpFmvouk6tmWRJCmBZzGdhUwsi/F4yPxCj+nURdV1FDRCb8JgOGI6neKH
      nz7qHOoc4EU02NkkVAx6nf1Pal8E/Z0dWt0uhzsTe/okACLTpBVCZJoEQGSaBEBkmgRAZJoE
      QGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBk
      mgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoE
      QGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBkmgRAZJoEQGSaBEBk
      mgRAZJoEQGSaBEBk2v8HqE7wXTfZF0cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='actual sales amount vs budget ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='product category sales ' width='192'>
      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
      jOe++lfC/wcFgToUhMl3OQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='sales figure by region and city ' width='192'>
      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
      307y4s928elbA7TtynL+8hSJrSi7jr7I9Idn6dNHCPzpn3G0q+FezrfeeotE4u5V4DfeeIPm
      5ua8/UxkDGAjqtPDz//r/6DBscnf/fXfsxiJsJFMkVob40L/FABWfIVfn/mQRCbDnct9rEYX
      WTOCdLQ3kk3G2EymSK3d4UL/NHrFTn78wwMYznp++qPDzNwc5N0Ld/iz//bf6TZvcW0uwepS
      FIsMa0sRErEI/vBBfvKDbhbnkxx/9jjP/+Tn9238AK+88gqnTp3i1KlTVFXld6Ex2QPYiJHZ
      4srl29SFW/FaN1iZHmDF1cpzvV6uZ/9tOqLTTUtTC9u+9zINTgeegMKLhzU+O3sGt7WfNW8H
      3zvk4pYKhsOBpio4XS4cDg1V1ajzWPQP3WF6XaUn6GQoNs9Iv4/VlE4XGi6XE03VUAGPx8vi
      xAhrXVXUBD33cn7++eeEw2FeeumlvP9M5F4gG7HMDBO3r3NnfoO2PQfoanRz5eIV8IeobGij
      Vo2R8tYT0Be5cnMUd1Ub+zoruHq5HyqaOb6/lWuXrqEFQlQ2tmNpbtr8Ceaj0FKjMrtk0Fpj
      cv7SLYKt3RzsamL46hesKUFqfbXU1SokzAqqPUmWNx201CpcuXidut29dDZV3Mt5/fp1Kioq
      2LFjR95/JlIAYWsyBhC2JgUQtvb/AT63xGmy1OQUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top 10 customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top ten product by sales amount ' width='192'>
      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
      C3e7fm/F9fEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
